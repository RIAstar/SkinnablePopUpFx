<?xml version="1.0" encoding="utf-8"?>
<!--
- Copyright (c) 2013 Maxime Cowez a.k.a. RIAstar.
-
- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
- documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
- rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
- permit persons to whom the Software is furnished to do so, subject to the following conditions:
-
- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
- Software.
-
- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
- WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
- OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
- OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:rs="library://ns.riastar.net/flex"
         xmlns:v="net.riastar.demo.view.*">

    <fx:Metadata>
        [Event(name="switch", type="flash.events.DataEvent")]
    </fx:Metadata>

    <fx:Declarations>
        <rs:Alert id="alert" maxWidth="{properties.maxPopUpWidth}"
                  modal="{properties.modal}"
                  title="{properties.title}"
                  text="{properties.text}"
                  committable="{properties.committable}"
                  cancelable="{properties.cancelable}"
                  discardable="{properties.discardable}"
                  commitLabel="{properties.commitLabel}"
                  cancelLabel="{properties.cancelLabel}"
                  discardLabel="{properties.discardLabel}"
                  skinClass="{properties._skinClass}"
                  backgroundAlpha="{properties.backgroundAlpha}"
                  backgroundColor="{properties.backgroundColor}"
                  borderAlpha="{properties.borderAlpha}"
                  borderColor="{properties.borderColor}"
                  borderVisible="{properties.borderVisible}"
                  cornerRadius="{properties.cornerRadius}"
                  color="{properties.color}"
                  dropShadowVisible="{properties.dropShadowVisible}"/>
    </fx:Declarations>

    <s:layout>
        <s:HorizontalLayout/>
    </s:layout>

    <v:AlertPropertyPanel id="properties" skinClass="net.riastar.demo.skin.AlertPropertyPanelSkin"/>

    <s:Line height="100%">
        <s:stroke>
            <s:SolidColorStroke color="0xdddddd"/>
        </s:stroke>
    </s:Line>

    <s:VGroup width="100%" height="100%" paddingLeft="25" paddingRight="25" paddingTop="25" paddingBottom="25">
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Label text="SkinnablePopUpFx: Alert" fontSize="18" fontWeight="bold"/>
            <s:GraphicElement width="100%"/>
            <s:Button label="Switch to 'Toaster' demo"
                      click="dispatchEvent(new DataEvent('switch', false, false, 'toaster'))"/>
        </s:HGroup>

        <s:Line width="100%">
            <s:stroke>
                <s:SolidColorStroke color="0xdddddd"/>
            </s:stroke>
        </s:Line>

        <s:Group width="100%" height="150">
            <s:Button label="Show Alert" click="alert.open()" horizontalCenter="0" verticalCenter="0"/>
        </s:Group>

        <v:AlertCodeArea properties="{properties}" width="100%" height="100%"
                    fontFamily="Courier new" color="0xffffff" contentBackgroundColor="0x272822"/>
    </s:VGroup>

</s:Group>
