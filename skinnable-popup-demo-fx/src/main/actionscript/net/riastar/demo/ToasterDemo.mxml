<?xml version="1.0" encoding="utf-8"?>
<!--
- Copyright (c) 2013 Maxime Cowez a.k.a. RIAstar.
-
- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
- documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
- rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
- permit persons to whom the Software is furnished to do so, subject to the following conditions:
-
- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
- Software.
-
- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
- WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
- OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
- OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:rs="library://ns.riastar.net/flex"
         xmlns:v="net.riastar.demo.view.*">

    <fx:Metadata>
        [Event(name="switch", type="flash.events.DataEvent")]
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
        private function toast():void {
            var lipsumWords:Array = lipsum.split(/\s+/);
            var messageWords:Array = [];

            var numLipsumWords:int = lipsumWords.length;
            var numMessageWords:int = Math.random() * 10 + 5;

            for (var i:int = 0; i < numMessageWords; i++) {
                var j:int = Math.random() * numLipsumWords;
                messageWords.push(lipsumWords[j]);
            }

            toaster.toast(messageWords.join(" "));
        }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <fx:String id="lipsum">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris dapibus leo eu velit posuere, at porta eros
            euismod. Maecenas sed vestibulum nisl. Vivamus elementum odio a dui elementum tincidunt. Pellentesque non
            neque rhoncus, blandit quam quis, molestie leo. Nulla a eros tincidunt, fermentum neque eu, egestas nulla.
            Donec vel elit nulla. Etiam nec magna eu arcu convallis bibendum.
        </fx:String>

        <rs:Toaster id="toaster" width="150"
                    showTime="{properties.showTime}"
                    itemRenderer="{properties.itemRenderer}"
                    top="{isNaN(properties._top) ? null : properties._top}"
                    verticalCenter="{isNaN(properties._verticalCenter) ? null : properties._verticalCenter}"
                    bottom="{isNaN(properties._bottom) ? null : properties._bottom}"
                    left="{isNaN(properties._left) ? null : properties._left}"
                    horizontalCenter="{isNaN(properties._horizontalCenter) ? null : properties._horizontalCenter}"
                    right="{isNaN(properties._right) ? null : properties._right}"/>
    </fx:Declarations>

    <s:layout>
        <s:HorizontalLayout/>
    </s:layout>

    <v:ToasterPropertyPanel id="properties" skinClass="net.riastar.demo.skin.ToasterPropertyPanelSkin"/>

    <s:Line height="100%">
        <s:stroke>
            <s:SolidColorStroke color="0xdddddd"/>
        </s:stroke>
    </s:Line>

    <s:VGroup width="100%" height="100%" paddingLeft="25" paddingRight="25" paddingTop="25" paddingBottom="25">
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Label text="SkinnablePopUpFx: Alert" fontSize="18" fontWeight="bold"/>
            <s:GraphicElement width="100%"/>
            <s:Button label="Switch to 'Alert' demo"
                      click="dispatchEvent(new DataEvent('switch', false, false, 'alert'))"/>
        </s:HGroup>

        <s:Line width="100%">
            <s:stroke>
                <s:SolidColorStroke color="0xdddddd"/>
            </s:stroke>
        </s:Line>

        <s:Group width="100%" height="150">
            <s:Button label="toast a message" click="toast()"/>
        </s:Group>

        <v:ToasterCodeArea properties="{properties}" width="100%" height="100%"
                           fontFamily="Courier new" color="0xffffff" contentBackgroundColor="0x272822"/>
    </s:VGroup>

</s:Group>
